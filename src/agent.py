"""
root_agent entrypoint for ADK
"""
from google.adk.agents import LlmAgent
from google.adk.tools.agent_tool import AgentTool
from src.agents.blog_post_agent import create_blog_post_agent
from src.agents.brief_enrichment_agent import create_brief_enrichment_agent

DEFAULT_MODEL = "gemini-2.5-flash"

def create_root_agent(model: str | None = None) -> LlmAgent:
    """
    Return the project's root agent.

    This coordinator agent acts as the central orchestrator. It takes a user
    prompt, uses the brief_enrichment_agent to create a full product brief,
    and then delegates content creation to other specialist agents.

    Returns:
        LlmAgent: An instance of the CampaignCoordinator LlmAgent.
    """
    brief_enrichment_agent = create_brief_enrichment_agent()
    blog_post_agent = create_blog_post_agent()

    coordinator_instruction = """
You are a Campaign Coordinator. Your goal is to generate a product announcement blog post from a user's idea.

You have access to the following tools: `brief_enrichment_agent` and `blog_post_agent`.

Follow this exact sequence:

1.  First, call the `brief_enrichment_agent` tool with the user's original request. This will flesh out the idea into a structured product brief.
2.  Next, take the JSON output from the `brief_enrichment_agent` and call the `blog_post_agent` tool with it.
3.  Finally, output ONLY the text of the blog post generated by the `blog_post_agent`. Do not output any other text or conversational filler.
"""


    return LlmAgent(
        name="campaign_coordinator",
        model=model or DEFAULT_MODEL,
        description="A campaign coordinator that manages content creation from start to finish.",
        instruction=coordinator_instruction,

        tools=[
            AgentTool(agent=brief_enrichment_agent),
            AgentTool(agent=blog_post_agent),
            # social_media_agent,
        ],
    )

root_agent: LlmAgent = create_root_agent()